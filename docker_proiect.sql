CREATE TABLE CINEMATOGRAF(
    ID_CINEMATOGRAF NUMBER(8) PRIMARY KEY,
    NUME_CINEMATOGRAF VARCHAR2(50) NOT NULL
    );
    
CREATE TABLE FILM(
    ID_FILM NUMBER(8) PRIMARY KEY,
    NUME_FILM VARCHAR2(50) NOT NULL,
    GEN VARCHAR2(50),
    DURATA VARCHAR2(5) NOT NULL 
    );
    
CREATE TABLE ACTOR(
    ID_ACTOR NUMBER(8) PRIMARY KEY,
    NUME_ACTOR VARCHAR2(50) NOT NULL
    );
    
CREATE TABLE FILM_ACTOR(
    ID_FILM NUMBER(8) REFERENCES FILM(ID_FILM),
    ID_ACTOR NUMBER(8) REFERENCES ACTOR(ID_ACTOR)
    );

ALTER TABLE FILM_ACTOR
ADD PRIMARY KEY(ID_FILM, ID_ACTOR); 

CREATE TABLE SALA(
    ID_SALA NUMBER(8) PRIMARY KEY,
    ID_CINEMATOGRAF NUMBER(8) REFERENCES CINEMATOGRAF(ID_CINEMATOGRAF),
    NUMAR_SALA NUMBER(4) NOT NULL,
    CAPACITATE NUMBER(4) NOT NULL
    );
    
CREATE TABLE ANGAJAT(
    ID_ANGAJAT NUMBER(8) PRIMARY KEY,
    ID_CINEMATOGRAF NUMBER(8) REFERENCES CINEMATOGRAF(ID_CINEMATOGRAF),
    NUME_AMGAJAT VARCHAR2(50) NOT NULL,
    TELEFON NUMBER(11)
    );
    
CREATE TABLE RULARE(
    ID_RULARE NUMBER(8) PRIMARY KEY,
    ID_FILM NUMBER(8) REFERENCES FILM(ID_FILM),
    ID_SALA NUMBER(8) REFERENCES SALA(ID_SALA),
    ID_ANGAJAT NUMBER(8) REFERENCES ANGAJAT(ID_ANGAJAT),
    DATA DATE NOT NULL,
    ORA VARCHAR2(5) NOT NULL,
    PRET NUMBER(3) NOT NULL
    );

CREATE TABLE CLIENT(
    ID_CLIENT NUMBER(8) PRIMARY KEY,
    NUME_CLIENT VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR(50),
    TELEFON NUMBER(11)
    );
    
CREATE TABLE BILET(
    ID_BILET NUMBER(8) PRIMARY KEY,
    ID_RULARE NUMBER(8) REFERENCES RULARE(ID_RULARE),
    ID_CLIENT NUMBER(8) REFERENCES CLIENT(ID_CLIENT)
    );
    
CREATE TABLE PRODUS(
    ID_PRODUS NUMBER(8) PRIMARY KEY,
    ID_CINEMATOGRAF NUMBER(8) REFERENCES CINEMATOGRAF(ID_CINEMATOGRAF),
    NUME_PRODUS VARCHAR2(50) NOT NULL,
    STOC NUMBER(8) NOT NULL,
    PRET NUMBER(4) NOT NULL
    );
    
CREATE TABLE ACHIZITIE_CLIENT(
    ID_ACHIZITIE NUMBER(8) PRIMARY KEY,
    ID_CLIENT NUMBER(8) REFERENCES CLIENT(ID_CLIENT),
    ID_PRODUS NUMBER(8) REFERENCES PRODUS(ID_PRODUS),
    CANTITATE NUMBER(8) NOT NULL
    );
    
CREATE TABLE RECENZIE(
    ID_CLIENT NUMBER(8) REFERENCES CLIENT(ID_CLIENT),
    ID_FILM NUMBER(8) REFERENCES FILM(ID_FILM),
    NOTA NUMBER(1) NOT NULL,
    DESCRIERE VARCHAR2(256),
    PRIMARY KEY (ID_CLIENT, ID_FILM)
    );

INSERT INTO CINEMATOGRAF VALUES (1, 'Cinemplex');
INSERT INTO CINEMATOGRAF VALUES (2, 'Patria');
INSERT INTO CINEMATOGRAF VALUES (3, 'Cinemagia');
INSERT INTO CINEMATOGRAF VALUES (4, 'Happy Cinema');
INSERT INTO CINEMATOGRAF VALUES (5, 'Cinema Union');

INSERT INTO FILM VALUES (1, 'Avatar', 'action', '02:46');
INSERT INTO FILM VALUES (2, 'Inception', 'fiction, action', '02:26');
INSERT INTO FILM VALUES (3, 'Interstellar', 'sci-fi, adventure', '02:49');
INSERT INTO FILM VALUES (4, 'Prestige', 'drama', '02:10');
INSERT INTO FILM VALUES (5, 'Memento', 'thriller, mystery', '01:53');
INSERT INTO FILM VALUES (6, 'Batman Begins', 'action, fantasy', '02:20');

INSERT INTO ACTOR VALUES (1, 'Zoe Saldana');
INSERT INTO ACTOR VALUES (2, 'Kate Winslet');
INSERT INTO ACTOR VALUES (3, 'Sam Worthington');
INSERT INTO ACTOR VALUES (4, 'Leonardo Dicaprio');
INSERT INTO ACTOR VALUES (5, 'Cillian Murphy');
INSERT INTO ACTOR VALUES (6, 'Tom Hardy');
INSERT INTO ACTOR VALUES (7, 'Matthew McConaughey');
INSERT INTO ACTOR VALUES (8, 'Anne Hathaway');
INSERT INTO ACTOR VALUES (9, 'Michael Caine');
INSERT INTO ACTOR VALUES (10, 'Christian Bale');
INSERT INTO ACTOR VALUES (11, 'Hugh Jackman');
INSERT INTO ACTOR VALUES (12, 'Gui Pearce');

INSERT INTO FILM_ACTOR VALUES (1, 1);
INSERT INTO FILM_ACTOR VALUES (1, 2);
INSERT INTO FILM_ACTOR VALUES (1, 3);
INSERT INTO FILM_ACTOR VALUES (2, 4);
INSERT INTO FILM_ACTOR VALUES (2, 5);
INSERT INTO FILM_ACTOR VALUES (2, 6);
INSERT INTO FILM_ACTOR VALUES (2, 9);
INSERT INTO FILM_ACTOR VALUES (3, 7);
INSERT INTO FILM_ACTOR VALUES (3, 8);
INSERT INTO FILM_ACTOR VALUES (4, 10);
INSERT INTO FILM_ACTOR VALUES (4, 11);
INSERT INTO FILM_ACTOR VALUES (4, 9);
INSERT INTO FILM_ACTOR VALUES (5, 11);
INSERT INTO FILM_ACTOR VALUES (6, 10);
INSERT INTO FILM_ACTOR VALUES (6, 5);
INSERT INTO FILM_ACTOR VALUES (6, 9);

INSERT INTO SALA VALUES (1, 1, 1, 20);
INSERT INTO SALA VALUES (2, 1, 2, 30);
INSERT INTO SALA VALUES (3, 2, 1, 40);
INSERT INTO SALA VALUES (4, 3, 1, 25);
INSERT INTO SALA VALUES (5, 3, 2, 35);
INSERT INTO SALA VALUES (6, 4, 1, 20);
INSERT INTO SALA VALUES (7, 5, 1, 30);

INSERT INTO ANGAJAT VALUES (1, 1, 'Vasile Ionescu', 07345306290);
INSERT INTO ANGAJAT VALUES (2, 1, 'Munteanu Ionut-Alexandru', 07849058650);
INSERT INTO ANGAJAT VALUES (3, 2, 'Ciubotaru Victor', NULL);
INSERT INTO ANGAJAT VALUES (4, 3, 'Albu Ruxandra-Gabriela', NULL);
INSERT INTO ANGAJAT VALUES (5, 3, 'Alexandru Marian', 07252021207);
INSERT INTO ANGAJAT VALUES (6, 3, 'Bogatu Cristina', NULL);
INSERT INTO ANGAJAT VALUES (7, 4, 'Boian Nicolae', NULL);
INSERT INTO ANGAJAT VALUES (8, 5, 'Drumea Cristina', 07148287227);

INSERT INTO RULARE VALUES (1, 1, 1, 1, '23-05-2023', '14:30', 40);
INSERT INTO RULARE VALUES (2, 2, 2, 2, '23-05-2023', '15:00', 35);
INSERT INTO RULARE VALUES (3, 4, 1, 1, '24-05-2023', '18:00', 40);
INSERT INTO RULARE VALUES (4, 5, 2, 2, '24-05-2023', '20:00', 30);
INSERT INTO RULARE VALUES (5, 1, 3, 3, '23-05-2023', '16:30', 25);
INSERT INTO RULARE VALUES (6, 1, 5, 4, '25-05-2023', '18:30', 23);
INSERT INTO RULARE VALUES (7, 3, 4, 6, '24-05-2023', '14:30', 35);
INSERT INTO RULARE VALUES (8, 3, 5, 5, '27-05-2023', '14:00', 33);
INSERT INTO RULARE VALUES (9, 4, 5, 4, '24-05-2023', '12:30', 40);
INSERT INTO RULARE VALUES (10, 2, 6, 7, '25-05-2023', '14:30', 35);
INSERT INTO RULARE VALUES (11, 6, 6, 7, '25-05-2023', '18:00', 50);

INSERT INTO CLIENT VALUES (1, 'Enache Dorin', 'enache.dorin@gmail.com' , 07249092246);
INSERT INTO CLIENT VALUES (2, 'Engel Monica', 'engel.monica@gmail.com', NULL);
INSERT INTO CLIENT VALUES (3, 'Florescu Monica', NULL, NULL);
INSERT INTO CLIENT VALUES (4, 'Fluga Camelia', 'fluga.camelia@gmail.com', NULL);
INSERT INTO CLIENT VALUES (5, 'Gheroghe Mihaela', NULL, 07879097789);
INSERT INTO CLIENT VALUES (6, 'Constantin Ioan', NULL, NULL);
INSERT INTO CLIENT VALUES (7, 'Ionescu Ovidiu', 'ionescu.ovidiu@gmail.com', NULL);
INSERT INTO CLIENT VALUES (8, 'Isac Luminita', NULL, NULL);
INSERT INTO CLIENT VALUES (9, 'Lache Simona', NULL, NULL);
INSERT INTO CLIENT VALUES (10, 'Maican Catalin', NULL, 07524044012);

INSERT INTO BILET VALUES (1, 1, 1);
INSERT INTO BILET VALUES (2, 1, 2);
INSERT INTO BILET VALUES (3, 2, 3);
INSERT INTO BILET VALUES (4, 3, 5);
INSERT INTO BILET VALUES (5, 4, 1);
INSERT INTO BILET VALUES (6, 4, 7);
INSERT INTO BILET VALUES (7, 6, 6);
INSERT INTO BILET VALUES (8, 6, 3);
INSERT INTO BILET VALUES (9, 8, 8);
INSERT INTO BILET VALUES (10, 9, 2);

INSERT INTO PRODUS VALUES (1, 1, 'Coca-Cola', 1000, 8); 
INSERT INTO PRODUS VALUES (2, 1, 'Lay''s', 200, 15); 
INSERT INTO PRODUS VALUES (3, 2, 'Coca-Cola', 800, 9); 
INSERT INTO PRODUS VALUES (4, 3, 'Jucarie caine', 50, 100); 
INSERT INTO PRODUS VALUES (5, 3, 'Popcorn', 1000, 5); 
INSERT INTO PRODUS VALUES (6, 3, 'Pepsi', 1000, 7); 
INSERT INTO PRODUS VALUES (7, 5, 'Poster', 200, 25);

INSERT INTO ACHIZITIE_CLIENT VALUES (1, 1, 1, 2);
INSERT INTO ACHIZITIE_CLIENT VALUES (2, 1, 2, 1);
INSERT INTO ACHIZITIE_CLIENT VALUES (3, 2, 2, 2);
INSERT INTO ACHIZITIE_CLIENT VALUES (4, 3, 1, 5);
INSERT INTO ACHIZITIE_CLIENT VALUES (5, 7, 1, 3);
INSERT INTO ACHIZITIE_CLIENT VALUES (6, 6, 4, 3);
INSERT INTO ACHIZITIE_CLIENT VALUES (7, 6, 5, 2);
INSERT INTO ACHIZITIE_CLIENT VALUES (8, 3, 4, 1);
INSERT INTO ACHIZITIE_CLIENT VALUES (9, 2, 1, 2);
INSERT INTO ACHIZITIE_CLIENT VALUES (10, 9, 7, 2);

INSERT INTO RECENZIE VALUES (1, 1, 5, 'Foarte bun film pentru vizionarea cu familia');
INSERT INTO RECENZIE VALUES (3, 2, 4, NULL);
INSERT INTO RECENZIE VALUES (5, 5, 5, NULL);
INSERT INTO RECENZIE VALUES (6, 4, 2, 'Nu am inteles sensul filmului');
INSERT INTO RECENZIE VALUES (9, 3, 5, NULL);

COMMIT;

----12
--1 Sa se afiseze descrescator dupa lungimea numele cinematografului profitul fiecaruia primit pe rularea filmelor
--NVL, DECODE, ORDER BY, LENGTH
SELECT ID_CINEMATOGRAF, NUME_CINEMATOGRAF, SUM(DECODE(ID_BILET, NULL, 0, PRET)) PRET
FROM (
    SELECT C.ID_CINEMATOGRAF, C.NUME_CINEMATOGRAF, NVL(R.PRET, 0) PRET, B.ID_BILET
    FROM CINEMATOGRAF C 
    FULL OUTER JOIN SALA S ON S.ID_CINEMATOGRAF = C.ID_CINEMATOGRAF
    FULL OUTER JOIN RULARE R ON R.ID_SALA = S.ID_SALA
    FULL OUTER JOIN BILET B ON B.ID_RULARE = R.ID_RULARE
    )
GROUP BY ID_CINEMATOGRAF, NUME_CINEMATOGRAF
ORDER BY LENGTH(NUME_CINEMATOGRAF) DESC;



--2 Sa se afiseze produsele care au fost achizitionate de clientii care au cumparat cel putin 2 bilete
--grupare si filtrare cu cereri nesincronizate
SELECT NUME_PRODUS 
FROM PRODUS
WHERE ID_PRODUS IN (
    SELECT ID_PRODUS
    FROM ACHIZITIE_CLIENT
    WHERE ID_CLIENT IN (
        SELECT ID_CLIENT
        FROM BILET
        GROUP BY ID_CLIENT
        HAVING COUNT(ID_BILET)>=2
        )
    );
    
--3 Sa se afiseze notele puse de catre clientii care au cumparat macar unn bilet pentru un film care se ruleaza astazi
-- TRUNC, SYSDATE, subcereri sincronizate
SELECT R.ID_CLIENT, R.NOTA
FROM RECENZIE R 
WHERE EXISTS(
    SELECT RL.ID_RULARE
    FROM RULARE RL
    WHERE RL.DATA >= TRUNC(SYSDATE)
    AND RL.ID_RULARE IN (
        SELECT B.ID_RULARE
        FROM BILET B
        WHERE B.ID_CLIENT = R.ID_CLIENT)
        );


--4 Sa se afiseze profitul primmit din produse pentru fiecare cinematograf, iar daca profitul e null sa se afiseze N/A
-- CASE, WITH
WITH PROFIT_PRODUSE AS (
    SELECT C.ID_CINEMATOGRAF, C.NUME_CINEMATOGRAF, P.ID_PRODUS, P.PRET
    FROM CINEMATOGRAF C
    FULL OUTER JOIN PRODUS P ON P.ID_CINEMATOGRAF = C.ID_CINEMATOGRAF
    FULL OUTER JOIN ACHIZITIE_CLIENT A ON A.ID_PRODUS = P.ID_PRODUS
    )
SELECT ID_CINEMATOGRAF, NUME_CINEMATOGRAF,
    CASE 
        WHEN SUM(ID_PRODUS) IS NOT NULL
        THEN TO_CHAR(SUM(PRET))
        ELSE 'N/A'
    END
FROM PROFIT_PRODUSE
GROUP BY ID_CINEMATOGRAF, NUME_CINEMATOGRAF;

--5 Sa se afiseze clientii care au vizionat filmul Avatar sau Interstellar
-- Subcereri nesincronizate in clauza FROM
SELECT ID_CLIENT, NUME_CLIENT
FROM (
    SELECT ID_CLIENT, NUME_CLIENT
    FROM CLIENT
    WHERE ID_CLIENT IN (
        SELECT ID_CLIENT
        FROM BILET 
        WHERE ID_RULARE IN ( 
            SELECT ID_RULARE
            FROM RULARE 
            WHERE ID_FILM IN (
                SELECT ID_FILM 
                FROM FILM 
                WHERE UPPER(NUME_FILM) = 'AVATAR' OR UPPER(NUME_FILM) = 'INTERSTELLAR'
                )
            )
        )
    );
    
--13
--1Sa se scada pretul biletelor cu 5 lei la filmul Inception
UPDATE RULARE
SET PRET = PRET-5
WHERE ID_FILM IN (
    SELECT ID_FILM
    FROM FILM
    WHERE NUME_FILM = 'Inception'
    );
    
--2 Sa se modifice cu 5 nota din reccenzia lui Florescu Monica la filmul Inception 
UPDATE RECENZIE
SET NOTA = 5
WHERE ID_CLIENT IN (
    SELECT ID_CLIENT
    FROM CLIENT 
    WHERE NUME_CLIENT = 'Florescu Monica'
    ) AND ID_FILM IN (
    SELECT ID_FILM 
    FROM FILM
    WHERE NUME_FILM = 'Inception');
    
--3 Sa se amane rularea cu o ora a filmelor din cinema Cinemplex  din data 23-05-2023
UPDATE RULARE
SET ORA = TO_CHAR(TO_DATE(ORA, 'HH24:MI')+1)
WHERE ID_SALA IN (
    SELECT ID_SALA
    FROM SALA
    WHERE ID_CINEMATOGRAF IN (
        SELECT ID_CINEMATOGRAF 
        FROM CINEMATOGRAF
        WHERE NUME_CINEMATOGRAF = 'Cinemplex'
        )
    ) AND DATA = '23-05-2023';

--3 Sa se actualizeze stocul produselor
UPDATE PRODUS P
SET P.STOC = P.STOC - (
    SELECT NVL(SUM(A.CANTITATE), 0)
    FROM ACHIZITIE_CLIENT A
    WHERE A.ID_PRODUS = P.ID_PRODUS);
    
--4 Sa se stearga angajatii care n-au fost atribuiti la nici o rulare a filmului
DELETE FROM ANGAJAT
WHERE ID_ANGAJAT NOT IN (
    SELECT ID_ANGAJAT
    FROM RULARE
    );
    
--5 Sa se stearga produsele care n-au fost achizitionate nici o data
DELETE FROM PRODUS
WHERE ID_PRODUS NOT IN (
    SELECT ID_PRODUS
    FROM ACHIZITIE_CLIENT);
    
--6 Sa se stearga rularea filmului Batman Begins din cinematograful Happy Cinema din data 25-05-2023
DELETE FROM RULARE
WHERE ID_SALA IN (
    SELECT ID_SALA
    FROM SALA
    WHERE ID_CINEMATOGRAF = (
        SELECT ID_CINEMATOGRAF
        FROM CINEMATOGRAF
        WHERE NUME_CINEMATOGRAF = 'Happy Cinema'
        )
    )
    AND ID_FILM = (
        SELECT ID_FILM
        FROM FILM
        WHERE NUME_FILM = 'Batman Begins'
        )
    AND DATA = '25-05-2023';
    
--14 Tabel cu numele clientilor si filmele vizionate de acestia
CREATE VIEW CLIENT_FILM AS
SELECT C.ID_CLIENT, C.NUME_CLIENT, F.ID_FILM, F.NUME_FILM
FROM CLIENT C
JOIN BILET B ON B.ID_CLIENT = C.ID_CLIENT
JOIN RULARE R ON R.ID_RULARE = B.ID_RULARE
JOIN FILM F ON F.ID_FILM = R.ID_FILM;

SELECT * FROM CLIENT_FILM;
--Sa se afiseze clientii care au vizionat filmul Avatar
SELECT NUME_CLIENT 
FROM CLIENT_FILM
WHERE NUME_FILM = 'Avatar';

--Comanda LMD nepermisa - INSERT


--15
--1 Sa se afiseze cinematogrfaele si clientii care au fost la vizionarea unui film in acel cinematograf
SELECT DISTINCT CM.ID_CINEMATOGRAF, CM.NUME_CINEMATOGRAF, C.ID_CLIENT, C.NUME_CLIENT
FROM CLIENT C
JOIN BILET B ON B.ID_CLIENT = C.ID_CLIENT
JOIN RULARE R ON R.ID_RULARE = B.ID_RULARE
JOIN SALA S ON S.ID_SALA = R.ID_SALA
JOIN CINEMATOGRAF CM ON CM.ID_CINEMATOGRAF = S.ID_CINEMATOGRAF;
    
--2 Sa se afiseze angajatii care au asistat la rularea filmelor Avatar si Prestige
SELECT DISTINCT A.ID_ANGAJAT, A.NUME_AMGAJAT
FROM ANGAJAT A
WHERE NOT EXISTS((
    SELECT F.ID_FILM
    FROM FILM F
    WHERE NUME_FILM = 'Avatar' OR NUME_FILM = 'Prestige')
    MINUS
    (SELECT F.ID_FILM
    FROM FILM F, RULARE R
    WHERE F.ID_FILM = R.ID_FILM AND R.ID_ANGAJAT = A.ID_ANGAJAT));

--3 Sa se afiseze 3 actori care au jucat in cele mai multe filme
SELECT ID_ACTOR, NUME_ACTOR
FROM(
    SELECT A.ID_ACTOR, A.NUME_ACTOR, COUNT(F.ID_FILM) 
    FROM ACTOR A
    JOIN FILM_ACTOR F ON A.ID_ACTOR = F.ID_ACTOR
    GROUP BY A.ID_ACTOR, A.NUME_ACTOR
    ORDER BY COUNT(F.ID_FILM) DESC 
    )
WHERE ROWNUM<=3;
    





